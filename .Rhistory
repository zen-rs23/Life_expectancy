library(DataExplorer)
install.packages("DataExplorer")
library(DataExplorer)
create_report(airquality)
data <- read.csv("C:\\Users\\krohi\\OneDrive\\Desktop\\Life_expectancy_status.csv")
data
create_report(data)
data
plot_missing(
data,
group = list(Good = 0.05, OK = 0.4, Bad = 0.8, Remove = 1),
missing_only = FALSE,
geom_label_args = list(),
title = NULL,
ggtheme = theme_gray(),
theme_config = list(legend.position = c("bottom"))
)
plot_missing(
data,
group = list(Good = 0.05, OK = 0.4, Bad = 0.8, Remove = 1),
missing_only = FALSE,
geom_label_args = list(),
title = NULL,
theme_set(theme_gray()),
ggtheme = theme_gray(),
theme_config = list(legend.position = c("bottom"))
)
plot_missing(
data,
group = list(Good = 0.05, OK = 0.4, Bad = 0.8, Remove = 1),
missing_only = FALSE,
geom_label_args = list(),
title = NULL,
theme_config = list(legend.position = c("bottom"))
)
plot_correlation(
data,
type = c("all", "discrete", "continuous"),
maxcat = 20L,
cor_args = list(),
geom_text_args = list(),
title = NULL,
theme_config = list(legend.position = "bottom", axis.text.x = element_text(angle =
90))
)
plot_missing(
data,
group = list(Good = 0.05, OK = 0.4, Bad = 0.8, Remove = 1),
missing_only = FALSE,
geom_label_args = list(),
title = NULL,
theme_config = list(legend.position = c("bottom"))
)
plot_correlation(
data,
type = c("all", "discrete", "continuous"),
maxcat = 20L,
cor_args = list(),
geom_text_args = list(),
title = NULL,
ggtheme = theme_gray(),
theme_config = list(legend.position = "bottom", axis.text.x = element_text(angle =
90))
)
plot_correlation(
data,
type = c("all", "discrete", "continuous"),
maxcat = 20L,
cor_args = list(),
geom_text_args = list(),
title = NULL,
theme_config = list(legend.position = "bottom", axis.text.x = element_text(angle =
90))
)
plot_correlation(
data,
type = c("all", "discrete", "continuous"),
maxcat = 20L,
cor_args = list(),
geom_text_args = list(),
title = NULL,
)
plot_correlation(
data,
type = c("all", "discrete", "continuous"),
maxcat = 20L,
cor_args = list(),
geom_text_args = list(),
title = NULL
)
plot_correlation(
data,
type = c("all", "discrete", "continuous"),
maxcat = 20L,
cor_args = list(),
geom_text_args = list(),
title = NULL,
theme_config = list(legend.position = "bottom", axis.text.x = element_text(angle =
90))
)
library(ggplot2)
data <- read.csv("C:\\Users\\krohi\\OneDrive\\Desktop\\Life_expectancy_status.csv")
data
plot_missing(
data,
group = list(Good = 0.05, OK = 0.4, Bad = 0.8, Remove = 1),
missing_only = FALSE,
geom_label_args = list(),
title = NULL,
theme_config = list(legend.position = c("bottom"))
)
plot_correlation(
data,
type = c("all", "discrete", "continuous"),
maxcat = 20L,
cor_args = list(),
geom_text_args = list(),
title = NULL,
theme_config = list(legend.position = "bottom", axis.text.x = element_text(angle =
90))
)
plot_correlation(
data,
type = c("all", "discrete", "continuous"),
maxcat = 20L,
cor_args = list(),
geom_text_args = list(),
title = NULL,
ggtheme = theme_gray(),
theme_config = list(legend.position = "bottom", axis.text.x = element_text(angle =
90))
)
plot_correlation(
data,
type = c("all", "discrete", "continuous"),
maxcat = 20L,
cor_args = list(),
geom_text_args = list(),
title = NULL,
ggtheme = theme_gray(),
theme_config = list(legend.position = "bottom", axis.text.x = element_text(angle =
90))
)
plot_missing(
data,
group = list(Good = 0.05, OK = 0.4, Bad = 0.8, Remove = 1),
missing_only = FALSE,
geom_label_args = list(),
title = NULL,
theme_config = list(legend.position = c("bottom"))
)
plot_correlation(
data,
type = c("all", "discrete", "continuous"),
maxcat = 20L,
cor_args = list(),
geom_text_args = list(),
title = NULL,
ggtheme = theme_gray(),
theme_config = list(legend.position = "bottom", axis.text.x = element_text(angle =
90))
)
plot_correlation(
data,
type = c("all", "discrete", "continuous"),
maxcat = 20L,
cor_args = list(),
geom_text_args = list(),
title = NULL,
ggtheme = theme_gray(),
theme_config = list(legend.position = "bottom", axis.text.x = element_text(angle =
90))
)
# Loading the dataset (csv file)
life_data <- read.csv("C:\\Users\\krohi\\OneDrive\\Desktop\\Life_expectancy_status.csv")
# Checking for missing values
life_data <- life_data %>%
filter(!is.na(Life.expectancy))
# Loading the dataset (csv file)
life_data <- read.csv("C:\\Users\\krohi\\OneDrive\\Desktop\\Life_expectancy_status.csv")
# Loading Libraries
library(tidyverse)
library(skimr)
library(reshape)
library(mlbench)
library(reshape)
library(GGally)
library(vip)
library(ISLR)
library(WVPlots)
library(ggstatsplot)
library(hrbrthemes)
library(viridis)
library(ggExtra)
library(plotly)
library(patchwork)
library(tidymodels)
library(mltools)
library(ggplot2)
library(plotly)
library(caret)
library(glmnet)
library(GGally)
library(corrplot)
library(ggstar)
library(leaps)
library(gganimate)
library(corrr)
library(mltools)
library(elasticnet)
library(tidygeocoder)
library(glmnet)
library(DT)
library(broom)
options(repr.plot.width = 8, repr.plot.height = 8)
library(knitr)
library(gridExtra)
library(dplyr)
library(wesanderson)
# Loading Libraries
library(tidyverse)
library(skimr)
library(reshape)
library(mlbench)
library(reshape)
library(GGally)
library(vip)
library(ISLR)
library(WVPlots)
library(ggstatsplot)
library(hrbrthemes)
library(viridis)
library(ggExtra)
library(plotly)
library(patchwork)
library(tidymodels)
library(mltools)
library(ggplot2)
library(plotly)
library(caret)
library(glmnet)
library(GGally)
library(corrplot)
library(ggstar)
library(leaps)
library(gganimate)
library(corrr)
library(mltools)
library(elasticnet)
library(tidygeocoder)
library(glmnet)
library(DT)
library(broom)
options(repr.plot.width = 8, repr.plot.height = 8)
library(knitr)
library(gridExtra)
library(dplyr)
library(wesanderson)
# Loading Libraries
library(tidyverse)
library(skimr)
library(reshape)
library(mlbench)
library(reshape)
library(GGally)
library(vip)
library(ISLR)
library(WVPlots)
library(ggstatsplot)
library(hrbrthemes)
library(viridis)
library(ggExtra)
library(plotly)
library(patchwork)
library(tidymodels)
library(mltools)
library(ggplot2)
library(plotly)
library(caret)
library(glmnet)
library(GGally)
library(corrplot)
library(ggstar)
library(leaps)
library(gganimate)
library(corrr)
library(mltools)
library(elasticnet)
library(tidygeocoder)
library(glmnet)
library(DT)
library(broom)
options(repr.plot.width = 8, repr.plot.height = 8)
library(knitr)
library(gridExtra)
library(dplyr)
library(wesanderson)
# Loading the dataset (csv file)
life_data <- read.csv("C:\\Users\\krohi\\OneDrive\\Desktop\\Life_expectancy_status.csv")
# Checking for missing values
life_data <- life_data %>%
filter(!is.na(Life.expectancy))
sum(is.na(life_data))
par(mfrow= c(1,1))
boxplot(life_data$Life.expectancy,
main = "Life Expectancy Globally",
ylab = "Life Expectancy Years")
par(mfrow = c(2,3))
invisible(lapply(5:10, function(i) boxplot(life_data[, i],
main = colnames(life_data)[i],col="blue")))
par(mfrow = c(2,3))
invisible(lapply(11:16, function(i) boxplot(life_data[, i],
main = colnames(life_data)[i],col="blue")))
par(mfrow = c(2,3))
invisible(lapply(17:22, function(i) boxplot(life_data[, i],
main = colnames(life_data)[i],col="blue")))
par(mfrow = c(2,3))
invisible(lapply(23:28, function(i) boxplot(life_data[, i],
main = colnames(life_data)[i], col="blue")))
par(mfrow = c(2,3))
invisible(lapply(29:34, function(i) boxplot(life_data[, i],
main = colnames(life_data)[i], col="blue")))
par(mfrow = c(2,3))
invisible(lapply(35:40, function(i) boxplot(life_data[, i],
main = colnames(life_data)[i], col="blue")))
par(mfrow = c(2,3))
invisible(lapply(41:46, function(i) boxplot(life_data[, i],
main = colnames(life_data)[i], col="blue")))
par(mfrow = c(2,3))
invisible(lapply(47:52, function(i) boxplot(life_data[, i],
main = colnames(life_data)[i], col="blue")))
par(mfrow = c(2,3))
invisible(lapply(53:56, function(i) boxplot(life_data[, i],
main = colnames(life_data)[i], col="blue")))
#### plotting a correlation matrix between variables
life_cormat <- round(cor(life_data[,5:24],use = "complete.obs"),2)
life_cormat1<-round(cor(life_data[,25:56],use = "complete.obs"),2)
par(mfrow=c(1,1))
# png(file="corr.png", res=200, width=1200, height=1400)
corrplot(life_cormat, method="number",
tl.cex = 0.5,
number.cex = 0.5,
cl.cex = 0.5)
par(mfrow=c(1,1))
# png(file="corr.png", res=200, width=1200, height=1400)
corrplot(life_cormat1, method="number",
tl.cex = 0.5,
number.cex = 0.5,
cl.cex = 0.5)
life_data %>%
ggscatmat(columns = 5:12, color="Status",alpha = 0.7)
# plot all the variables against data, four plots in a grid
par(mfrow = c(2,2))
counter = 0
#### plotting a correlation matrix between variables
life_cormat <- round(cor(life_data[,5:24],use = "complete.obs"),2)
life_cormat1<-round(cor(life_data[,25:56],use = "complete.obs"),2)
par(mfrow= c(1,1))
boxplot(life_data$Life.expectancy,
main = "Life Expectancy Globally",
ylab = "Life Expectancy Years")
par(mfrow = c(2,3))
invisible(lapply(5:10, function(i) boxplot(life_data[, i],
main = colnames(life_data)[i],col="blue")))
invisible(lapply(5:10, function(i) boxplot(life_data[, i],
main = colnames(life_data)[i],col="blue")))
par(mfrow = c(2,3))
invisible(lapply(11:16, function(i) boxplot(life_data[, i],
main = colnames(life_data)[i],col="blue")))
par(mfrow = c(2,3))
invisible(lapply(17:22, function(i) boxplot(life_data[, i],
main = colnames(life_data)[i],col="blue")))
par(mfrow = c(2,3))
invisible(lapply(23:28, function(i) boxplot(life_data[, i],
main = colnames(life_data)[i], col="blue")))
par(mfrow = c(2,3))
invisible(lapply(29:34, function(i) boxplot(life_data[, i],
main = colnames(life_data)[i], col="blue")))
par(mfrow = c(2,3))
invisible(lapply(35:40, function(i) boxplot(life_data[, i],
main = colnames(life_data)[i], col="blue")))
par(mfrow = c(2,3))
invisible(lapply(41:46, function(i) boxplot(life_data[, i],
main = colnames(life_data)[i], col="blue")))
par(mfrow = c(2,3))
invisible(lapply(47:52, function(i) boxplot(life_data[, i],
main = colnames(life_data)[i], col="blue")))
par(mfrow = c(2,3))
invisible(lapply(53:56, function(i) boxplot(life_data[, i],
main = colnames(life_data)[i], col="blue")))
#### plotting a correlation matrix between variables
life_cormat <- round(cor(life_data[,5:24],use = "complete.obs"),2)
## Packages required
library(ggplot2)
library(GGally)
library(ggcorrplot)
library(plotly)
library(tidyverse)
library(cowplot)
library(psych)
library(lattice)
library(xtable)
library(plyr); library(dplyr)
library(gridExtra)
library(WVPlots)
#Reading csv file
life_expectancy_data <- read.csv(
"C:\\Users\\krohi\\OneDrive\\Desktop\\Life_expectancy_status.csv")
head(life_expectancy_data, 5)
#Dimensions : Gives numbers of rows and columns
dim(life_expectancy_data)
# Structure of dataset
str(life_expectancy_data)
#statistical summary of the variables
summary(life_expectancy_data)
#Check for missing values
colSums(is.na(life_expectancy_data))
# Select numeric variables for calculating mean
life_expectancy_data_num <- select(life_expectancy_data,-c(1,2,3,4))
#Check for missing values
colSums(is.na(life_expectancy_data))
# Select numeric variables for calculating mean
life_expectancy_data_num <- select(life_expectancy_data,-c(1,2,3,4))
#Calculate means of all the numeric variables
colMeans(life_expectancy_data_num, na.rm = TRUE)
#Impute missing values in numeric variables with mean
for(i in 5:ncol(life_expectancy_data)) {
life_expectancy_data[ , i][is.na(life_expectancy_data[ , i])] <- mean(life_expectancy_data[ , i], na.rm=TRUE)
}
summary(life_expectancy_data)
